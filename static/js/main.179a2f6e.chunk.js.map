{"version":3,"sources":["components/pages/Home/HomeStyle.js","components/core/StyledComponent.js","components/pages/Home/Home.jsx","components/pages/Orereo/OrereoStyle.js","components/topics/NavigationBar/NavigationBarStyle.js","components/topics/NavigationBar/NavigationBar.jsx","components/pages/Orereo/Orereo.jsx","components/pages/NotFound/NotFoundStyle.js","components/pages/NotFound/NotFound.jsx","components/pages/VisualAlgo/VisualAlgoStyle.js","components/pages/VisualAlgo/VisualAlgo.jsx","route/MainRoute.jsx","serviceWorker.js","index.js","static/images/Cards/contemplative-reptile.jpg","static/images/Cards/orereo.gif","static/images/Cards/game_of_life.png","static/images/Oreo/o.png","static/images/Oreo/re.png"],"names":["styles","main","backgroundColor","header","margin","textAlign","media","height","stage_select_list","display","gridTemplateColumns","gridGap","stage_select_list_item","background","position","StyledComponent","styleMap","children","createUseStyles","Home","state","PlaygroundStyle","useStyles","classes","props","className","Card","root","CardActionArea","CardMedia","component","src","orereoGif","alt","title","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","gameOfLifeImg","contemplativeReptile","Component","bottom","width","button_group","makeStyles","navigation","left","top","link","textDecoration","Navigation","NavigationBarStyle","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","to","Orereo","addO","setState","oreo","concat","key","length","o","style","window","innerWidth","draggable","addRE","re","oreoElements","OrereoStyle","NotFound","NotFoundStyle","right","borderRadius","padding","button","gridHeight","run_button","main_canvas","formControl","minWidth","grid_container","VisualAlgo","init","canvasBarGroup","undefined","canvasTextGroup","barArray","switchList","steps","canvasWidth","canvas","canvasHeight","arrayLength","barWidth","paper","setup","Group","Array","i","currentValue","Math","round","random","path","Shape","Rectangle","fillColor","bottomCenter","name","addChild","text","PointText","Point","justification","content","visible","textVisibility","fontSize","max","resetRandomArray","changeSpeed","toggleText","forEach","element","showGroup","console","log","handleLengthChange","newValue","handleSpeedChange","animateSpeed","runAlgo","algoName","bubbleSort","quickSort","selectionSort","insertionSort","showMessage","animateAlgo","switchTwoBar","index1","index2","path1","path2","text1","text2","path1X","x","path2X","text1X","text2X","animatingColor","tween","y","easing","duration","temp1","temp2","indexs","shift","setTimeout","inputArr","swapped","len","tmp","push","arr","min","j","handleAlgoChange","target","value","handleSnackBarClose","reason","showSnackBar","msg","severity","alertContent","alertSeverity","this","tools","tool","remove","view","onResize","items","leftIndex","rightIndex","temp","pivot","floor","swap","index","partition","lengthMarks","label","speedMarks","VisualAlgoStyle","resize","gridLineColor","ref","el","Grid","container","spacing","item","xs","FormControl","InputLabel","Select","labelId","onChange","Slider","aria-labelledby","valueLabelDisplay","step","marks","disableElevation","Snackbar","autoHideDuration","Alert","elevation","MainRoute","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"qQA2BeA,EAzBA,CACXC,KAAM,CACFC,gBAJuB,WAM3BC,OAAQ,CACJC,OAAQ,mBACRC,UAAW,UAEfC,MAAO,CACHC,OAAQ,KAEZC,kBAAmB,CACfC,QAAS,OACTL,OAAQ,OACRM,oBAAqB,uCACrBC,QAAS,QAEbC,uBAAwB,CACpBC,WApBuB,UAqBvBJ,QAAS,OACTC,oBAAqB,cACrBI,SAAU,a,QCjBHC,MAJf,YAAkD,IAAvBC,EAAsB,EAAtBA,SACvB,OAAOC,EADsC,EAAZA,UACjBC,YAAgBF,K,kHCafG,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,GAFD,E,kGAUJ,IAAD,OACP,OACE,kBAAC,EAAD,CAAiBJ,SAAUK,IACxB,SAACC,GACA,IAAMC,EAAUD,EAAU,EAAKE,OAC/B,OACE,yBAAKC,UAAWF,EAAQtB,MACtB,wBAAIwB,UAAWF,EAAQpB,QAAvB,cACA,wBAAIsB,UAAWF,EAAQf,mBACrB,wBAAIiB,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKC,IACLC,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKY,IACLV,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,yBAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKa,IACLX,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKa,IACLX,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKa,IACLX,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKa,IACLX,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKa,IACLX,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKa,IACLX,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,iBAMN,wBAAId,UAAWF,EAAQX,wBACrB,kBAACc,EAAA,EAAD,CAAMD,UAAWF,EAAQI,MACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVL,UAAWF,EAAQjB,MACnByB,IAAKa,IACLX,IAAK,uBACLC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,0B,GA5RYM,a,QCoBnB7C,EAlCA,CACXC,KAAM,CACFa,SAAU,WACVgC,OAAQ,MACRC,MAAO,OACPxC,OAAQ,OACRL,gBARuB,WAU3BC,OAAQ,CACJW,SAAU,YACVT,UAAW,UAEfC,MAAO,CACHC,OAAQ,KAEZC,kBAAmB,CACfC,QAAS,OACTL,OAAQ,OACRM,oBAAqB,uCACrBC,QAAS,QAEbC,uBAAwB,CACpBC,WAAY,4BACZJ,QAAS,OACTC,oBAAqB,cACrBI,SAAU,YAEdkC,aAAc,CACV5C,OAAQ,oBACRC,UAAW,W,8FClBJ,GAAEiB,UAXC2B,YAAW,CACzBC,WAAY,CACRpC,SAAU,WACVqC,KAAM,OACNC,IAAK,OAETC,KAAM,CACFC,eAAgB,W,QCkDTC,EAnDI,WACjB,IAAMhC,EAAUiC,EAAmBlC,YADZ,EAESmC,IAAMC,SAAS,MAFxB,mBAEhBC,EAFgB,KAENC,EAFM,KAQjBC,EAAc,WAClBD,EAAY,OAGd,OACE,6BACE,kBAACE,EAAA,EAAD,CACEC,KAAK,QACLxB,MAAM,UACNyB,aAAW,OACXC,gBAAc,cACdC,gBAAc,OACdC,QAhBc,SAACC,GACnBR,EAAYQ,EAAMC,gBAgBd5C,UAAWF,EAAQ2B,YAEnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAMoB,GAAG,cAAcX,SAAUA,EAAUY,aAAW,EAACC,KAAMC,QAAQd,GAAWe,QAASb,GACvF,kBAACc,EAAA,EAAD,CAAUR,QAASN,GACjB,kBAAC,IAAD,CAAMe,GAAG,cAAcnD,UAAWF,EAAQ8B,MAA1C,SAIF,kBAACsB,EAAA,EAAD,CAAUR,QAASN,GACjB,kBAAC,IAAD,CAAMe,GAAG,UAAUnD,UAAWF,EAAQ8B,MAAtC,WAIF,kBAACsB,EAAA,EAAD,CAAUR,QAASN,GACjB,kBAAC,IAAD,CAAMe,GAAG,eAAenD,UAAWF,EAAQ8B,MAA3C,gBAIF,kBAACsB,EAAA,EAAD,CAAUR,QAASN,GACjB,kBAAC,IAAD,CAAMe,GAAG,YAAYnD,UAAWF,EAAQ8B,MAAxC,gBCzCWwB,E,kDACnB,aAAe,IAAD,8BACZ,gBAOFC,KAAO,WACL,EAAKC,SAAS,CACZC,KAAM,YAAI,EAAK5D,MAAM4D,MAAMC,OACzB,yBAAKC,IAAG,UAAK,EAAK9D,MAAM4D,KAAKG,SAC3B,yBACEpD,IAAKqD,IACLnD,IAAI,OACJoD,MAAO,CACLtC,MAAO,IACPxC,OAAQ,IACRO,SAAU,WACVsC,IAAK,IAA+B,GAAzB,EAAKhC,MAAM4D,KAAKG,OAC3BhC,KAAMmC,OAAOC,WAAa,EAAI,KAEhCC,UAAU,eAtBN,EA4BdC,MAAQ,WACN,EAAKV,SAAS,CACZC,KAAM,YAAI,EAAK5D,MAAM4D,MAAMC,OACzB,yBAAKC,IAAG,UAAK,EAAK9D,MAAM4D,KAAKG,SAC3B,yBACEpD,IAAK2D,IACLzD,IAAI,OACJoD,MAAO,CACLtC,MAAO,IACPxC,OAAQ,IACRO,SAAU,WACVsC,IAAK,IAA+B,GAAzB,EAAKhC,MAAM4D,KAAKG,OAC3BhC,KAAMmC,OAAOC,WAAa,EAAI,KAEhCC,UAAU,eAxClB,EAAKpE,MAAQ,CAAE4D,KAAM,IACrB,EAAKW,aAAe,GAHR,E,kGAiDJ,IAAD,OACP,OACE,kBAAC,EAAD,CAAiB3E,SAAU4E,IACxB,SAACtE,GACA,IAAMC,EAAUD,EAAU,EAAKE,OAC/B,OACE,yBAAKC,UAAWF,EAAQtB,MACtB,wBAAIwB,UAAWF,EAAQpB,QAAvB,UACA,kBAAC,EAAD,MACC,EAAKiB,MAAM4D,KACZ,yBAAKvD,UAAWF,EAAQyB,cACtB,kBAACP,EAAA,EAAD,CAAQH,QAAQ,YAAYC,MAAM,UAAU4B,QAAS,EAAKW,MAA1D,SAGA,kBAACrC,EAAA,EAAD,CAAQH,QAAQ,YAAYC,MAAM,UAAU4B,QAAS,EAAKsB,OAA1D,mB,GAhEoB5C,aCmBrB7C,EA1BA,CACXC,KAAM,CACF8C,MAAO,QACPxC,OAAQ,QACRL,gBANuB,WAQ3BC,OAAQ,CACJE,UAAW,UAEfC,MAAO,CACHC,OAAQ,KAEZC,kBAAmB,CACfC,QAAS,OACTL,OAAQ,OACRM,oBAAqB,uCACrBC,QAAS,QAEbC,uBAAwB,CACpBC,WAAY,4BACZJ,QAAS,OACTC,oBAAqB,cACrBI,SAAU,aCpBG+E,E,kDACnB,aAAe,IAAD,8BACZ,gBACKzE,MAAQ,GAFD,E,kGAOJ,IAAD,OACP,OACE,kBAAC,EAAD,CAAiBJ,SAAU8E,IACxB,SAACxE,GACA,IAAMC,EAAUD,EAAU,EAAKE,OAC/B,OACE,6BACE,wBAAIC,UAAWF,EAAQpB,QAAvB,qB,GAfwB0C,aCmDvB7C,EApDA,CACXC,KAAM,CACFa,SAAU,WACVgC,OAAQ,MACRC,MAAO,OACPxC,OAAQ,OACRL,gBATuB,WAW3BC,OAAQ,CACJW,SAAU,YACVT,UAAW,SACXkC,MAAO,SAEXS,aAAc,CACVlC,SAAU,WACVqC,KAAM,QACN4C,MAAO,QACPxF,OAAQ,QACRuC,OAAQ,OACR5C,gBAAiB,UACjB8F,aAAc,OACdC,QAAS,QAEbC,OAAQ,CACJ3F,OAAO,GAAD,OAAK4F,GAAL,MACNpD,MAAO,SAEXqD,WAAY,CACR7F,OAAO,GAAD,OAAK4F,GAAL,MACNpD,MAAO,QACPlC,WAAY,oDAEhBwF,YAAa,CACTvF,SAAU,WACVqC,KAAM,QACN4C,MAAO,QACP3C,IAAK,QACLN,OAAQ,QACR5C,gBAAiB,WAErBoG,YAAa,CACT/F,OAAO,GAAD,OA3CK,GA2CL,MACNgG,SAAU,SAEdC,eAAgB,CAIZP,QAAS,S,oFClCIQ,G,kDACnB,aAAe,IAAD,8BACZ,gBAkCFC,KAAO,WACL,EAAKC,oBAAiBC,EACtB,EAAKC,qBAAkBD,EACvB,EAAKE,SAAW,GAChB,EAAKC,WAAa,GAClB,EAAKhC,SAAS,CAAEiC,MAAO,IAEvB,IAAMC,EAAc,EAAKC,OAAOnE,MAC1BoE,EAAe,EAAKD,OAAO3G,OAE3B6G,EAAc,EAAKhG,MAAMgG,YACzBC,GAAYJ,EAAc,MAA8B,EAAdG,EAAkB,GAElEE,IAAMC,MAAM,EAAKL,QACjB,IAAIP,EAAiB,IAAIa,QACrBX,EAAkB,IAAIW,QAE1B,EAAKV,SAAW,IAAIW,MAAML,GAE1B,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAaM,IAAK,CACpC,IAAMC,EAAeC,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GACrD,EAAKhB,SAASY,GAAKC,EACnB,IAAMI,EAAO,IAAIC,QAAMC,UAAU,CAC/BC,UAAW,QACXC,aAAc,CAfF,GAead,EAAW,EAAIA,EAAWK,EAAI,EAAGP,EAf9C,IAgBZzE,KAAM,CAAC2E,EAAUM,IAAiBR,EAAe,KAAe,MAChEiB,KAAK,OAAD,OAASV,KAEff,EAAe0B,SAASN,GAI1B,IAAK,IAAIL,EAAI,EAAGA,EAAIN,EAAaM,IAAK,CACpC,IAAMY,EAAO,IAAIC,YACf,IAAIC,QAzBQ,GA0BAnB,EAAW,EAAIA,EAAWK,EAAI,EACxCP,EA3BU,GA2Be,EAAKL,SAASY,KAAOP,EAAe,KAAe,KAAO,KAGvFmB,EAAKG,cAAgB,SACrBH,EAAKJ,UAAY,QACjBI,EAAKI,QAAU,EAAK5B,SAASY,GAC7BY,EAAKF,KAAL,eAAoBV,GACpBY,EAAKK,QAAU,EAAKC,eACpBN,EAAKO,SAAWjB,KAAKkB,IAAIzB,EAAU,GACnCR,EAAgBwB,SAASC,GAG3B,EAAK3B,eAAiBA,EACtB,EAAKE,gBAAkBA,GApFX,EAuFdkC,iBAAmB,aAvFL,EAyFdC,YAAc,aAzFA,EA2FdC,WAAa,WACX,EAAKL,gBAAkB,EAAKA,eAC5B,EAAK/B,gBAAgB5F,SAASiI,SAAQ,SAACC,GACrCA,EAAQR,QAAU,EAAKC,mBA9Fb,EAkGdQ,UAAY,WACVC,QAAQC,IAAI,EAAK3C,gBACjB0C,QAAQC,IAAI,EAAKxC,WApGL,EAuGdyC,mBAAqB,SAACnF,EAAOoF,GACvBA,IAAa,EAAKpI,MAAMgG,cAC1B,EAAKrC,SAAS,CAAEqC,YAAaoC,IAC7B,EAAK7C,oBAAiBC,EACtB,EAAKC,qBAAkBD,EACvB,EAAKE,SAAW,GAChB,EAAKC,WAAa,GAClB,EAAKL,SA9GK,EAmHd+C,kBAAoB,SAACrF,EAAOoF,GACtBA,IAAa,EAAKpI,MAAMsI,cAC1B,EAAK3E,SAAS,CAAE2E,aAAcF,KArHpB,EAyHdG,QAAU,WASR,OAPA,EAAK5C,WAAa,GAOV,EAAK3F,MAAMwI,UACjB,IAAK,SACH,EAAKC,WAAW,EAAK/C,UACrB,MACF,IAAK,QACH,EAAKgD,UAAU,EAAKhD,SAAU,EAAG,EAAKA,SAAS3B,OAAS,GACxD,MACF,IAAK,YACH,EAAK4E,cAAc,EAAKjD,UACxB,MACF,IAAK,YACH,EAAKkD,cAAc,EAAKlD,UACxB,MAEF,QAEE,YADA,EAAKmD,YAAY,mCAAoC,WAKzD,EAAKC,eAtJO,EAyJdC,aAAe,SAACC,EAAQC,EAAQX,GAC9B,IAAM1C,EAAQ,EAAK5F,MAAM4F,MACzB,EAAKjC,SAAS,CAAEiC,MAAOA,EAAQ,IAE/B,IAAML,EAAiB,EAAKA,eACtBE,EAAkB,EAAKA,gBAEvByD,EAAQ3D,EAAe1F,SAASmJ,GAChCG,EAAQ5D,EAAe1F,SAASoJ,GAChCG,EAAQ3D,EAAgB5F,SAASmJ,GACjCK,EAAQ5D,EAAgB5F,SAASoJ,GAEjCK,EAASJ,EAAMxJ,SAAS6J,EACxBC,EAASL,EAAMzJ,SAAS6J,EACxBE,EAASL,EAAM1J,SAAS6J,EACxBG,EAASL,EAAM3J,SAAS6J,EAE9BL,EAAMpC,UAAY,EAAK6C,eACvBR,EAAMrC,UAAY,EAAK6C,eACvBT,EAAMU,MACJ,CACElK,SAAU,IAAI0H,QAAMoC,EAAQN,EAAMxJ,SAASmK,IAE7C,CACEC,OAAQ,iBACRC,SAAU,IAAQzB,IAGtBa,EAAMS,MACJ,CACElK,SAAU,IAAI0H,QAAMkC,EAAQH,EAAMzJ,SAASmK,IAE7C,CACEC,OAAQ,iBACRC,SAAU,IAAQzB,IAGtBY,EAAMU,MACJ,CACE9C,UAAW,SAEb,CACEgD,OAAQ,iBACRC,SAAU,MAGdZ,EAAMS,MACJ,CACE9C,UAAW,SAEb,CACEgD,OAAQ,iBACRC,SAAU,MAIdX,EAAMQ,MACJ,CACElK,SAAU,IAAI0H,QAAMsC,EAAQN,EAAM1J,SAASmK,IAE7C,CACEC,OAAQ,iBACRC,SAAU,IAAQzB,IAGtBe,EAAMO,MACJ,CACElK,SAAU,IAAI0H,QAAMqC,EAAQJ,EAAM3J,SAASmK,IAE7C,CACEC,OAAQ,iBACRC,SAAU,IAAQzB,IAItB,IAAM0B,EAAQd,EACd3D,EAAe1F,SAASmJ,GAAUG,EAClC5D,EAAe1F,SAASoJ,GAAUe,EAClC,IAAMC,EAAQb,EACd3D,EAAgB5F,SAASmJ,GAAUK,EACnC5D,EAAgB5F,SAASoJ,GAAUgB,GAzOvB,EA4OdnB,YAAc,WACZ,IAAMR,EAAe,EAAKtI,MAAMsI,aAEhC,GAAI,EAAK3C,WAAW5B,OAAS,EAAG,CAC9B,IAAMmG,EAAS,EAAKvE,WAAWwE,QAC/B,EAAKpB,aAAamB,EAAO,GAAIA,EAAO,GAAI5B,GAGtC,EAAK3C,WAAW5B,OAAS,EAC3BqG,YAAW,kBAAM,EAAKtB,gBAAe,IAAQR,EAAe,IAE5D,EAAKO,YAAY,aAAc,YAvPrB,EA4PdJ,WAAa,SAAC4B,GAEZ,EAAK1E,WAAa,GAElB,IACI2E,EADAC,EAAMF,EAAStG,OAEnB,EAAG,CACDuG,GAAU,EACV,IAAK,IAAIhE,EAAI,EAAGA,EAAIiE,EAAKjE,IACvB,GAAI+D,EAAS/D,GAAK+D,EAAS/D,EAAI,GAAI,CACjC,IAAIkE,EAAMH,EAAS/D,GACnB+D,EAAS/D,GAAK+D,EAAS/D,EAAI,GAC3B+D,EAAS/D,EAAI,GAAKkE,EAClBF,GAAU,EACV,EAAK3E,WAAW8E,KAAK,CAACnE,EAAGA,EAAI,WAG1BgE,IA7QG,EA2Td3B,cAAgB,SAAC+B,GAEf,IADA,IAAIH,EAAMG,EAAI3G,OACLuC,EAAI,EAAGA,EAAIiE,EAAKjE,IAAK,CAE5B,IADA,IAAIqE,EAAMrE,EACDsE,EAAItE,EAAI,EAAGsE,EAAIL,EAAKK,IACvBF,EAAIC,GAAOD,EAAIE,KACjBD,EAAMC,GAGV,GAAID,IAAQrE,EAAG,CACb,IAAIkE,EAAME,EAAIpE,GACdoE,EAAIpE,GAAKoE,EAAIC,GACbD,EAAIC,GAAOH,EACX,EAAK7E,WAAW8E,KAAK,CAACnE,EAAGqE,OAxUjB,EA+Ud/B,cAAgB,SAACyB,GAEf,IADA,IAAItG,EAASsG,EAAStG,OACbuC,EAAI,EAAGA,EAAIvC,EAAQuC,IAAK,CAG/B,IAFA,IAAIxC,EAAMuG,EAAS/D,GACfsE,EAAItE,EAAI,EACLsE,GAAK,GAAKP,EAASO,GAAK9G,GAC7BuG,EAASO,EAAI,GAAKP,EAASO,GAC3B,EAAKjF,WAAW8E,KAAK,CAACG,EAAGA,EAAI,IAC7BA,GAAQ,EAEVP,EAASO,EAAI,GAAK9G,IAzVR,EAgWd+G,iBAAmB,SAAC7H,GAClB,EAAKW,SAAS,CAAE6E,SAAUxF,EAAM8H,OAAOC,SAjW3B,EAoWdC,oBAAsB,SAAChI,EAAOiI,GACb,cAAXA,GAIJ,EAAKtH,SAAS,CAAEuH,cAAc,KAzWlB,EAiXdrC,YAAc,SAACsC,EAAKC,GAClB,EAAKC,aAAeF,EACpB,EAAKG,cAAgBF,EACrB,EAAKzH,SAAS,CAAEuH,cAAc,KAlX9B,EAAKlL,MAAQ,CAAEgG,YAAa,GAAIsC,aAAc,IAAK1C,MAAO,EAAG4C,SAAU,GAAI0C,cAAc,GACzF,EAAK3F,oBAAiBC,EACtB,EAAKC,qBAAkBD,EACvB,EAAKE,SAAW,GAChB,EAAK8B,gBAAiB,EACtB,EAAK7B,WAAa,GAClB,EAAKgE,eAAiB,SACtB,EAAK0B,aAAe,UACpB,EAAKC,cAAgB,GAVT,E,gEAuBO,IAAD,OAElBpF,IAAMC,MAAMoF,KAAKzF,QACjBI,IAAMsF,MAAM1D,SAAQ,SAAC2D,GAAD,OAAUA,EAAKC,YACnCxF,IAAMyF,KAAKC,SAAW,WACpB,EAAKtG,QAIPiG,KAAKjG,S,2BAiPFuG,EAAOC,EAAWC,GACrB,IAAIC,EAAOH,EAAMC,GACjBD,EAAMC,GAAaD,EAAME,GACzBF,EAAME,GAAcC,EACpBT,KAAK5F,WAAW8E,KAAK,CAACqB,EAAWC,M,gCAEzBF,EAAO9J,EAAM4C,GAIrB,IAHA,IAAIsH,EAAQJ,EAAMrF,KAAK0F,OAAOvH,EAAQ5C,GAAQ,IAC5CuE,EAAIvE,EACJ6I,EAAIjG,EACC2B,GAAKsE,GAAG,CACb,KAAOiB,EAAMvF,GAAK2F,GAChB3F,IAEF,KAAOuF,EAAMjB,GAAKqB,GAChBrB,IAEEtE,GAAKsE,IACPW,KAAKY,KAAKN,EAAOvF,EAAGsE,GACpBtE,IACAsE,KAGJ,OAAOtE,I,gCAECuF,EAAO9J,EAAM4C,GACrB,IAAIyH,EAYJ,OAXIP,EAAM9H,OAAS,IAEbhC,GADJqK,EAAQb,KAAKc,UAAUR,EAAO9J,EAAM4C,IACjB,GAEjB4G,KAAK7C,UAAUmD,EAAO9J,EAAMqK,EAAQ,GAElCA,EAAQzH,GAEV4G,KAAK7C,UAAUmD,EAAOO,EAAOzH,IAG1BkH,I,+BAgEC,IAAD,OACDS,EAAc,CAClB,CACEvB,MAAO,GACPwB,MAAO,MAET,CACExB,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,GACPwB,MAAO,MAET,CACExB,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IACPwB,MAAO,QAILC,EAAa,CACjB,CACEzB,MAAO,GACPwB,MAAO,OAET,CACExB,MAAO,IACPwB,MAAO,KAET,CACExB,MAAO,IACPwB,MAAO,KAET,CACExB,MAAO,KAET,CACEA,MAAO,IACPwB,MAAO,KAET,CACExB,MAAO,IACPwB,MAAO,MAIX,OACE,kBAAC,EAAD,CAAiB3M,SAAU6M,IACxB,SAACvM,GACA,IAAMC,EAAUD,EAAU,EAAKE,OAC/B,OACE,yBAAKC,UAAWF,EAAQtB,MACtB,wBAAIwB,UAAWF,EAAQpB,QAAvB,iCACA,kBAAC,EAAD,MACA,yBAAKsB,UAAWF,EAAQ8E,aACtB,4BACEyH,OAAO,OACPzI,MAAO,CAAEtC,MAAO,OAAQxC,OAAQ,OAAQL,gBAAiB,EAAK6N,eAC9DC,IAAK,SAACC,GACJ,EAAK/G,OAAS+G,MAIpB,yBAAKxM,UAAWF,EAAQyB,cACtB,kBAACkL,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG3M,UAAWF,EAAQiF,gBAC7C,kBAAC0H,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAajM,QAAQ,YACnB,kBAACkM,EAAA,EAAD,CAAYlK,GAAG,qCAAf,qBACA,kBAACmK,GAAA,EAAD,CACEC,QAAQ,oCACRpK,GAAG,8BACH6H,MAAO,EAAK/K,MAAMwI,SAClB+E,SAAU,EAAK1C,iBACf0B,MAAM,MACNlM,UAAWF,EAAQ+E,aAEnB,kBAAC3B,EAAA,EAAD,CAAUwH,MAAM,IACd,qCAEF,kBAACxH,EAAA,EAAD,CAAUwH,MAAO,UAAjB,eACA,kBAACxH,EAAA,EAAD,CAAUwH,MAAO,SAAjB,cACA,kBAACxH,EAAA,EAAD,CAAUwH,MAAO,aAAjB,kBACA,kBAACxH,EAAA,EAAD,CAAUwH,MAAO,aAAjB,qBAIN,kBAAC+B,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,wCAAc,EAAKlN,MAAM4F,MAAzB,WAGF,kBAACkH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAClM,EAAA,EAAD,CAAYC,cAAY,GAAxB,iBAEF,kBAAC6L,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACM,EAAA,EAAD,CACEvJ,MAAO,CAAEtC,MAAO,SAChBoJ,MAAyC,kBAA3B,EAAK/K,MAAMgG,YAA2B,EAAKhG,MAAMgG,YAAc,EAC7EuH,SAAU,EAAKpF,mBACfsF,kBAAgB,kBAChBC,kBAAkB,OAClBC,KAAM,GACNC,MAAOtB,EACP3B,IAAK,GACLjD,IAAK,OAGT,kBAACoF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC7L,EAAA,EAAD,CACEhB,UAAWF,EAAQ2E,OACnB5D,QAAQ,YACRC,MAAM,UACN0M,kBAAgB,EAChB9K,QAAS,kBAAM,EAAK8E,eALtB,gBAWF,kBAACiF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAClM,EAAA,EAAD,CAAYC,cAAY,GAAxB,oBAEF,kBAAC6L,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACM,EAAA,EAAD,CACEvJ,MAAO,CAAEtC,MAAO,SAChBoJ,MAA0C,kBAA5B,EAAK/K,MAAMsI,aAA4B,EAAKtI,MAAMsI,aAAe,EAC/EiF,SAAU,EAAKlF,kBACfqF,kBAAkB,OAClBE,MAAOpB,EACPiB,kBAAgB,2BAChBE,KAAM,GACNhD,IAAK,GACLjD,IAAK,OAIT,kBAACoF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAAC7L,EAAA,EAAD,CACEhB,UAAWF,EAAQ6E,WACnB9D,QAAQ,YACRC,MAAM,UACN0M,kBAAgB,EAChB9K,QAAS,kBAAM,EAAKwF,YALtB,cAYJ,kBAACuF,GAAA,EAAD,CAAU1K,KAAM,EAAKpD,MAAMkL,aAAc6C,iBAAkB,IAAMzK,QAAS,EAAK0H,qBAC7E,kBAAC,GAAD,CAAO1H,QAAS,EAAK0H,oBAAqBI,SAAU,EAAKE,eACtD,EAAKD,wB,GAliBc5J,aA8iBxC,SAASuM,GAAM5N,GACb,OAAO,kBAAC,KAAD,eAAU8C,GAAG,QAAQ+K,UAAW,EAAG/M,QAAQ,UAAad,ICvjBjE,IA0Be8N,GA1BG,kBAChB,6BACE,kBAAC,EAAD,MAIA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOvH,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,IAAD,CAAUnD,GAAG,oBCjBDH,QACW,cAA7Ba,OAAOiK,SAASC,UAEe,UAA7BlK,OAAOiK,SAASC,UAEhBlK,OAAOiK,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAOL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhH,QAAQgH,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,mD,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,gC","file":"static/js/main.179a2f6e.chunk.js","sourcesContent":["const defaultBackgroundColor = '#f2f9ff';\r\n\r\nconst styles = {\r\n    main: {\r\n        backgroundColor: defaultBackgroundColor,\r\n    },\r\n    header: {\r\n        margin: '0px 0px 20px 0px',\r\n        textAlign: 'center',\r\n    },\r\n    media: {\r\n        height: 240,\r\n    },\r\n    stage_select_list: {\r\n        display: \"grid\",\r\n        margin: \"auto\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(480px, 1fr))\",\r\n        gridGap: \"30px\"\r\n    },\r\n    stage_select_list_item: {\r\n        background: defaultBackgroundColor,\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"480px 2.5fr\",\r\n        position: \"relative\"\r\n    }\r\n};\r\n\r\nexport default styles;","import { createUseStyles } from 'react-jss'\r\n\r\nfunction StyledComponent({ styleMap, children }) {\r\n    return children(createUseStyles(styleMap));\r\n}\r\n\r\nexport default StyledComponent;","import React, { Component } from 'react';\r\nimport PlaygroundStyle from './HomeStyle';\r\nimport StyledComponent from '../../core/StyledComponent';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport contemplativeReptile from '../../../static/images/Cards/contemplative-reptile.jpg';\r\nimport orereoGif from '../../../static/images/Cards/orereo.gif';\r\nimport gameOfLifeImg from '../../../static/images/Cards/game_of_life.png';\r\n\r\nexport default class Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  // TODO:\r\n  // 打开页面开启使用教程面板\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <StyledComponent styleMap={PlaygroundStyle}>\r\n        {(useStyles) => {\r\n          const classes = useStyles(this.props);\r\n          return (\r\n            <div className={classes.main}>\r\n              <h1 className={classes.header}>Playground</h1>\r\n              <ul className={classes.stage_select_list}>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={orereoGif}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Orereo\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={gameOfLifeImg}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Conway's Game of Life\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={contemplativeReptile}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Lizard\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={contemplativeReptile}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Lizard\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={contemplativeReptile}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Lizard\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={contemplativeReptile}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Lizard\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={contemplativeReptile}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Lizard\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={contemplativeReptile}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Lizard\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n                <li className={classes.stage_select_list_item}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.media}\r\n                        src={contemplativeReptile}\r\n                        alt={'contemplativeReptile'}\r\n                        title=\"Contemplative Reptile\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Lizard\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across\r\n                          all continents except Antarctica\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          );\r\n        }}\r\n      </StyledComponent>\r\n    );\r\n  }\r\n}\r\n","const defaultBackgroundColor = '#B5CAA0';\r\n\r\nconst styles = {\r\n    main: {\r\n        position: 'absolute',\r\n        bottom: '0px',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: defaultBackgroundColor,\r\n    },\r\n    header: {\r\n        position: 'abosulute',\r\n        textAlign: 'center',\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    stage_select_list: {\r\n        display: \"grid\",\r\n        margin: \"auto\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(480px, 1fr))\",\r\n        gridGap: \"30px\"\r\n    },\r\n    stage_select_list_item: {\r\n        background: \"rgba(255, 255, 255, 0.95)\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"480px 2.5fr\",\r\n        position: \"relative\"\r\n    },\r\n    button_group: {\r\n        margin: '800px 0px 0px 0px',\r\n        textAlign: 'center'\r\n    }\r\n\r\n};\r\n\r\nexport default styles;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    navigation: {\r\n        position: \"absolute\",\r\n        left: '10px',\r\n        top: '0px'\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n});\r\n\r\nexport default { useStyles };\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport NavigationBarStyle from './NavigationBarStyle';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  const classes = NavigationBarStyle.useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        className={classes.navigation}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link to=\"/playground\" className={classes.link}>\r\n            Home\r\n          </Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link to=\"/orereo\" className={classes.link}>\r\n            Orereo\r\n          </Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link to=\"/visual-algo\" className={classes.link}>\r\n            Visual Algo\r\n          </Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link to=\"/notfound\" className={classes.link}>\r\n            NotFound\r\n          </Link>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport OrereoStyle from './OrereoStyle';\r\nimport StyledComponent from '../../core/StyledComponent';\r\nimport Button from '@material-ui/core/Button';\r\nimport o from '../../../static/images/Oreo/o.png';\r\nimport re from '../../../static/images/Oreo/re.png';\r\n\r\nimport Navigation from '../../topics/NavigationBar/NavigationBar';\r\n\r\nexport default class Orereo extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { oreo: [] };\r\n    this.oreoElements = [];\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  addO = () => {\r\n    this.setState({\r\n      oreo: [...this.state.oreo].concat(\r\n        <div key={`${this.state.oreo.length}`}>\r\n          <img\r\n            src={o}\r\n            alt=\"logo\"\r\n            style={{\r\n              width: 240,\r\n              height: 160,\r\n              position: 'absolute',\r\n              top: 650 - this.state.oreo.length * 20,\r\n              left: window.innerWidth / 2 - 120,\r\n            }}\r\n            draggable=\"false\"\r\n          />\r\n        </div>\r\n      ),\r\n    });\r\n  };\r\n  addRE = () => {\r\n    this.setState({\r\n      oreo: [...this.state.oreo].concat(\r\n        <div key={`${this.state.oreo.length}`}>\r\n          <img\r\n            src={re}\r\n            alt=\"logo\"\r\n            style={{\r\n              width: 240,\r\n              height: 160,\r\n              position: 'absolute',\r\n              top: 650 - this.state.oreo.length * 20,\r\n              left: window.innerWidth / 2 - 120,\r\n            }}\r\n            draggable=\"false\"\r\n          />\r\n        </div>\r\n      ),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <StyledComponent styleMap={OrereoStyle}>\r\n        {(useStyles) => {\r\n          const classes = useStyles(this.props);\r\n          return (\r\n            <div className={classes.main}>\r\n              <h1 className={classes.header}>Orereo</h1>\r\n              <Navigation />\r\n              {this.state.oreo}\r\n              <div className={classes.button_group}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.addO}>\r\n                  add O\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.addRE}>\r\n                  add RE\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </StyledComponent>\r\n    );\r\n  }\r\n}\r\n","const defaultBackgroundColor = '#333333';\r\n\r\nconst styles = {\r\n    main: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n        backgroundColor: defaultBackgroundColor,\r\n    },\r\n    header: {\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    stage_select_list: {\r\n        display: \"grid\",\r\n        margin: \"auto\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(480px, 1fr))\",\r\n        gridGap: \"30px\"\r\n    },\r\n    stage_select_list_item: {\r\n        background: \"rgba(255, 255, 255, 0.95)\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"480px 2.5fr\",\r\n        position: \"relative\"\r\n    }\r\n};\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport NotFoundStyle from './NotFoundStyle';\r\nimport StyledComponent from '../../core/StyledComponent';\r\n\r\nexport default class NotFound extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <StyledComponent styleMap={NotFoundStyle}>\r\n        {(useStyles) => {\r\n          const classes = useStyles(this.props);\r\n          return (\r\n            <div>\r\n              <h1 className={classes.header}>Not Found</h1>\r\n            </div>\r\n          );\r\n        }}\r\n      </StyledComponent>\r\n    );\r\n  }\r\n}\r\n","const defaultBackgroundColor = '#3e5780';\r\nconst gridHeight = 50\r\n\r\nconst styles = {\r\n    main: {\r\n        position: 'absolute',\r\n        bottom: '0px',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: defaultBackgroundColor,\r\n    },\r\n    header: {\r\n        position: 'abosulute',\r\n        textAlign: 'center',\r\n        color: 'white'\r\n    },\r\n    button_group: {\r\n        position: 'absolute',\r\n        left: '200px',\r\n        right: '200px',\r\n        height: '200px',\r\n        bottom: '30px',\r\n        backgroundColor: '#f0f6ff',\r\n        borderRadius: '15px',\r\n        padding: '10px',\r\n    },\r\n    button: {\r\n        height: `${gridHeight - 10}px`,\r\n        width: '200px',\r\n    },\r\n    run_button: {\r\n        height: `${gridHeight - 10}px`,\r\n        width: '200px',\r\n        background: 'linear-gradient(45deg, #00e600 30%, #00e600 90%)',\r\n    },\r\n    main_canvas: {\r\n        position: 'absolute',\r\n        left: '200px',\r\n        right: '200px',\r\n        top: '100px',\r\n        bottom: '260px',\r\n        backgroundColor: '#3e5780',\r\n    },\r\n    formControl: {\r\n        height: `${gridHeight}px`,\r\n        minWidth: '300px'\r\n    },\r\n    grid_container: {\r\n        // position: 'absolute',\r\n        // top: '30px',\r\n        // left: '30px'\r\n        padding: '15px'\r\n    }\r\n};\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport VisualAlgoStyle from './VisualAlgoStyle';\r\nimport StyledComponent from '../../core/StyledComponent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Navigation from '../../topics/NavigationBar/NavigationBar';\r\n\r\nimport paper, { Shape, Group, Point, PointText } from 'paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default class VisualAlgo extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { arrayLength: 30, animateSpeed: 100, steps: 0, algoName: '', showSnackBar: false };\r\n    this.canvasBarGroup = undefined;\r\n    this.canvasTextGroup = undefined;\r\n    this.barArray = [];\r\n    this.textVisibility = true;\r\n    this.switchList = [];\r\n    this.animatingColor = 'yellow';\r\n    this.alertContent = 'nothing';\r\n    this.alertSeverity = '';\r\n  }\r\n\r\n  // ❎ 控制排序速度\r\n  // ✅‍ 开始排序\r\n  // ✅ 选择排序算法\r\n  // ✅ 设置数组长度\r\n  // ✅ 随机生成待排序数组\r\n  // ❎ 展示排序算法代码\r\n  // ❎ 显示当前所在代码行\r\n  // ❎ 提示当前状态 例如完成 未完成 需要选择算法等\r\n  // ❎ 界面优化\r\n\r\n  componentDidMount() {\r\n    // setup paper\r\n    paper.setup(this.canvas);\r\n    paper.tools.forEach((tool) => tool.remove());\r\n    paper.view.onResize = () => {\r\n      this.init();\r\n    };\r\n\r\n    // add all bars to canvasBarGroup\r\n    this.init();\r\n  }\r\n\r\n  init = () => {\r\n    this.canvasBarGroup = undefined;\r\n    this.canvasTextGroup = undefined;\r\n    this.barArray = [];\r\n    this.switchList = [];\r\n    this.setState({ steps: 0 });\r\n\r\n    const canvasWidth = this.canvas.width;\r\n    const canvasHeight = this.canvas.height;\r\n    const padding = 50;\r\n    const arrayLength = this.state.arrayLength;\r\n    const barWidth = (canvasWidth - 2 * padding) / (arrayLength * 2 - 1);\r\n\r\n    paper.setup(this.canvas);\r\n    var canvasBarGroup = new Group();\r\n    var canvasTextGroup = new Group();\r\n\r\n    this.barArray = new Array(arrayLength);\r\n\r\n    for (let i = 0; i < arrayLength; i++) {\r\n      const currentValue = Math.round(Math.random() * 98 + 1);\r\n      this.barArray[i] = currentValue;\r\n      const path = new Shape.Rectangle({\r\n        fillColor: 'white',\r\n        bottomCenter: [padding + barWidth / 2 + barWidth * i * 2, canvasHeight - padding],\r\n        size: [barWidth, currentValue * ((canvasHeight - 2 * padding) / 100)],\r\n        name: `bar-${i}`,\r\n      });\r\n      canvasBarGroup.addChild(path);\r\n    }\r\n\r\n    // optional: text\r\n    for (let i = 0; i < arrayLength; i++) {\r\n      const text = new PointText(\r\n        new Point(\r\n          padding + barWidth / 2 + barWidth * i * 2,\r\n          canvasHeight - padding - this.barArray[i] * ((canvasHeight - 2 * padding) / 100) - 10\r\n        )\r\n      );\r\n      text.justification = 'center';\r\n      text.fillColor = 'white';\r\n      text.content = this.barArray[i];\r\n      text.name = `text-${i}`;\r\n      text.visible = this.textVisibility;\r\n      text.fontSize = Math.max(barWidth, 8);\r\n      canvasTextGroup.addChild(text);\r\n    }\r\n\r\n    this.canvasBarGroup = canvasBarGroup;\r\n    this.canvasTextGroup = canvasTextGroup;\r\n  };\r\n\r\n  resetRandomArray = () => {};\r\n\r\n  changeSpeed = () => {};\r\n\r\n  toggleText = () => {\r\n    this.textVisibility = !this.textVisibility;\r\n    this.canvasTextGroup.children.forEach((element) => {\r\n      element.visible = this.textVisibility;\r\n    });\r\n  };\r\n\r\n  showGroup = () => {\r\n    console.log(this.canvasBarGroup);\r\n    console.log(this.barArray);\r\n  };\r\n\r\n  handleLengthChange = (event, newValue) => {\r\n    if (newValue !== this.state.arrayLength) {\r\n      this.setState({ arrayLength: newValue });\r\n      this.canvasBarGroup = undefined;\r\n      this.canvasTextGroup = undefined;\r\n      this.barArray = [];\r\n      this.switchList = [];\r\n      this.init();\r\n    }\r\n  };\r\n\r\n  // TODO:\r\n  handleSpeedChange = (event, newValue) => {\r\n    if (newValue !== this.state.animateSpeed) {\r\n      this.setState({ animateSpeed: newValue });\r\n    }\r\n  };\r\n\r\n  runAlgo = () => {\r\n    // clear render list\r\n    this.switchList = [];\r\n\r\n    // this.bubbleSort(this.barArray);\r\n    // this.quickSort(this.barArray, 0, this.barArray.length - 1);\r\n    // this.selectionSort(this.barArray);\r\n    // this.insertionSort(this.barArray);\r\n\r\n    switch (this.state.algoName) {\r\n      case 'bubble':\r\n        this.bubbleSort(this.barArray);\r\n        break;\r\n      case 'quick':\r\n        this.quickSort(this.barArray, 0, this.barArray.length - 1);\r\n        break;\r\n      case 'selection':\r\n        this.selectionSort(this.barArray);\r\n        break;\r\n      case 'insertion':\r\n        this.insertionSort(this.barArray);\r\n        break;\r\n\r\n      default:\r\n        this.showMessage('Please select an algorithm first', 'warning');\r\n        return;\r\n    }\r\n\r\n    // render\r\n    this.animateAlgo();\r\n  };\r\n\r\n  switchTwoBar = (index1, index2, animateSpeed) => {\r\n    const steps = this.state.steps;\r\n    this.setState({ steps: steps + 1 });\r\n\r\n    const canvasBarGroup = this.canvasBarGroup;\r\n    const canvasTextGroup = this.canvasTextGroup;\r\n\r\n    const path1 = canvasBarGroup.children[index1];\r\n    const path2 = canvasBarGroup.children[index2];\r\n    const text1 = canvasTextGroup.children[index1];\r\n    const text2 = canvasTextGroup.children[index2];\r\n\r\n    const path1X = path1.position.x;\r\n    const path2X = path2.position.x;\r\n    const text1X = text1.position.x;\r\n    const text2X = text2.position.x;\r\n\r\n    path1.fillColor = this.animatingColor;\r\n    path2.fillColor = this.animatingColor;\r\n    path1.tween(\r\n      {\r\n        position: new Point(path2X, path1.position.y),\r\n      },\r\n      {\r\n        easing: 'easeInOutCubic',\r\n        duration: 20000 / animateSpeed,\r\n      }\r\n    );\r\n    path2.tween(\r\n      {\r\n        position: new Point(path1X, path2.position.y),\r\n      },\r\n      {\r\n        easing: 'easeInOutCubic',\r\n        duration: 20000 / animateSpeed,\r\n      }\r\n    );\r\n    path1.tween(\r\n      {\r\n        fillColor: 'white',\r\n      },\r\n      {\r\n        easing: 'easeInOutCubic',\r\n        duration: 200,\r\n      }\r\n    );\r\n    path2.tween(\r\n      {\r\n        fillColor: 'white',\r\n      },\r\n      {\r\n        easing: 'easeInOutCubic',\r\n        duration: 200,\r\n      }\r\n    );\r\n\r\n    text1.tween(\r\n      {\r\n        position: new Point(text2X, text1.position.y),\r\n      },\r\n      {\r\n        easing: 'easeInOutCubic',\r\n        duration: 20000 / animateSpeed,\r\n      }\r\n    );\r\n    text2.tween(\r\n      {\r\n        position: new Point(text1X, text2.position.y),\r\n      },\r\n      {\r\n        easing: 'easeInOutCubic',\r\n        duration: 20000 / animateSpeed,\r\n      }\r\n    );\r\n\r\n    const temp1 = path1;\r\n    canvasBarGroup.children[index1] = path2;\r\n    canvasBarGroup.children[index2] = temp1;\r\n    const temp2 = text1;\r\n    canvasTextGroup.children[index1] = text2;\r\n    canvasTextGroup.children[index2] = temp2;\r\n  };\r\n\r\n  animateAlgo = () => {\r\n    const animateSpeed = this.state.animateSpeed;\r\n\r\n    if (this.switchList.length > 0) {\r\n      const indexs = this.switchList.shift();\r\n      this.switchTwoBar(indexs[0], indexs[1], animateSpeed);\r\n    }\r\n\r\n    if (this.switchList.length > 0) {\r\n      setTimeout(() => this.animateAlgo(), 20000 / animateSpeed + 30);\r\n    } else {\r\n      this.showMessage('Sort done!', 'success');\r\n    }\r\n  };\r\n\r\n  // bubble sort\r\n  bubbleSort = (inputArr) => {\r\n    // clear render list\r\n    this.switchList = [];\r\n\r\n    let len = inputArr.length;\r\n    let swapped;\r\n    do {\r\n      swapped = false;\r\n      for (let i = 0; i < len; i++) {\r\n        if (inputArr[i] > inputArr[i + 1]) {\r\n          let tmp = inputArr[i];\r\n          inputArr[i] = inputArr[i + 1];\r\n          inputArr[i + 1] = tmp;\r\n          swapped = true;\r\n          this.switchList.push([i, i + 1]);\r\n        }\r\n      }\r\n    } while (swapped);\r\n  };\r\n\r\n  // quick sort\r\n  swap(items, leftIndex, rightIndex) {\r\n    var temp = items[leftIndex];\r\n    items[leftIndex] = items[rightIndex];\r\n    items[rightIndex] = temp;\r\n    this.switchList.push([leftIndex, rightIndex]);\r\n  }\r\n  partition(items, left, right) {\r\n    var pivot = items[Math.floor((right + left) / 2)], //middle element\r\n      i = left, //left pointer\r\n      j = right; //right pointer\r\n    while (i <= j) {\r\n      while (items[i] < pivot) {\r\n        i++;\r\n      }\r\n      while (items[j] > pivot) {\r\n        j--;\r\n      }\r\n      if (i <= j) {\r\n        this.swap(items, i, j); //sawpping two elements\r\n        i++;\r\n        j--;\r\n      }\r\n    }\r\n    return i;\r\n  }\r\n  quickSort(items, left, right) {\r\n    var index;\r\n    if (items.length > 1) {\r\n      index = this.partition(items, left, right); //index returned from partition\r\n      if (left < index - 1) {\r\n        //more elements on the left side of the pivot\r\n        this.quickSort(items, left, index - 1);\r\n      }\r\n      if (index < right) {\r\n        //more elements on the right side of the pivot\r\n        this.quickSort(items, index, right);\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n\r\n  // selection sort\r\n  selectionSort = (arr) => {\r\n    let len = arr.length;\r\n    for (let i = 0; i < len; i++) {\r\n      let min = i;\r\n      for (let j = i + 1; j < len; j++) {\r\n        if (arr[min] > arr[j]) {\r\n          min = j;\r\n        }\r\n      }\r\n      if (min !== i) {\r\n        let tmp = arr[i];\r\n        arr[i] = arr[min];\r\n        arr[min] = tmp;\r\n        this.switchList.push([i, min]);\r\n      }\r\n    }\r\n    // return arr;\r\n  };\r\n\r\n  // insertion sort\r\n  insertionSort = (inputArr) => {\r\n    let length = inputArr.length;\r\n    for (let i = 1; i < length; i++) {\r\n      let key = inputArr[i];\r\n      let j = i - 1;\r\n      while (j >= 0 && inputArr[j] > key) {\r\n        inputArr[j + 1] = inputArr[j];\r\n        this.switchList.push([j, j + 1]);\r\n        j = j - 1;\r\n      }\r\n      inputArr[j + 1] = key;\r\n    }\r\n    // return inputArr;\r\n  };\r\n\r\n  // ??? sort\r\n\r\n  handleAlgoChange = (event) => {\r\n    this.setState({ algoName: event.target.value });\r\n  };\r\n\r\n  handleSnackBarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({ showSnackBar: false });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {string} msg\r\n   * @param {string} severity\r\n   */\r\n  showMessage = (msg, severity) => {\r\n    this.alertContent = msg;\r\n    this.alertSeverity = severity;\r\n    this.setState({ showSnackBar: true });\r\n  };\r\n\r\n  render() {\r\n    const lengthMarks = [\r\n      {\r\n        value: 10,\r\n        label: '10',\r\n      },\r\n      {\r\n        value: 20,\r\n      },\r\n      {\r\n        value: 30,\r\n      },\r\n      {\r\n        value: 40,\r\n      },\r\n      {\r\n        value: 50,\r\n        label: '50',\r\n      },\r\n      {\r\n        value: 60,\r\n      },\r\n      {\r\n        value: 70,\r\n      },\r\n      {\r\n        value: 80,\r\n      },\r\n      {\r\n        value: 90,\r\n      },\r\n      {\r\n        value: 100,\r\n        label: '100',\r\n      },\r\n    ];\r\n\r\n    const speedMarks = [\r\n      {\r\n        value: 50,\r\n        label: '1/2',\r\n      },\r\n      {\r\n        value: 100,\r\n        label: '1',\r\n      },\r\n      {\r\n        value: 200,\r\n        label: '2',\r\n      },\r\n      {\r\n        value: 250,\r\n      },\r\n      {\r\n        value: 300,\r\n        label: '3',\r\n      },\r\n      {\r\n        value: 400,\r\n        label: '4',\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <StyledComponent styleMap={VisualAlgoStyle}>\r\n        {(useStyles) => {\r\n          const classes = useStyles(this.props);\r\n          return (\r\n            <div className={classes.main}>\r\n              <h1 className={classes.header}>Visualized Sorting Algorithms</h1>\r\n              <Navigation />\r\n              <div className={classes.main_canvas}>\r\n                <canvas\r\n                  resize=\"true\"\r\n                  style={{ width: '100%', height: '100%', backgroundColor: this.gridLineColor }}\r\n                  ref={(el) => {\r\n                    this.canvas = el;\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className={classes.button_group}>\r\n                <Grid container spacing={1} className={classes.grid_container}>\r\n                  <Grid item xs={4}>\r\n                    <FormControl variant=\"outlined\">\r\n                      <InputLabel id=\"demo-simple-select-outlined-label\">Select Algorithms</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={this.state.algoName}\r\n                        onChange={this.handleAlgoChange}\r\n                        label=\"Age\"\r\n                        className={classes.formControl}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={'bubble'}>Bubble Sort</MenuItem>\r\n                        <MenuItem value={'quick'}>Quick Sort</MenuItem>\r\n                        <MenuItem value={'selection'}>Selection Sort</MenuItem>\r\n                        <MenuItem value={'insertion'}>Insertion Sort</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={5}></Grid>\r\n                  <Grid item xs={3}>\r\n                    <div>switch: {this.state.steps} times</div>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={2}>\r\n                    <Typography gutterBottom>Array Length</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <Slider\r\n                      style={{ width: '160px' }}\r\n                      value={typeof this.state.arrayLength === 'number' ? this.state.arrayLength : 0}\r\n                      onChange={this.handleLengthChange}\r\n                      aria-labelledby=\"discrete-slider\"\r\n                      valueLabelDisplay=\"auto\"\r\n                      step={10}\r\n                      marks={lengthMarks}\r\n                      min={10}\r\n                      max={100}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={5}></Grid>\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      className={classes.button}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => this.toggleText()}\r\n                    >\r\n                      Toggle Text\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={2}>\r\n                    <Typography gutterBottom>Animation Speed</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <Slider\r\n                      style={{ width: '160px' }}\r\n                      value={typeof this.state.animateSpeed === 'number' ? this.state.animateSpeed : 0}\r\n                      onChange={this.handleSpeedChange}\r\n                      valueLabelDisplay=\"auto\"\r\n                      marks={speedMarks}\r\n                      aria-labelledby=\"discrete-slider-restrict\"\r\n                      step={50}\r\n                      min={50}\r\n                      max={400}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={5}></Grid>\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      className={classes.run_button}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => this.runAlgo()}\r\n                    >\r\n                      Run Algo\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Snackbar open={this.state.showSnackBar} autoHideDuration={3000} onClose={this.handleSnackBarClose}>\r\n                  <Alert onClose={this.handleSnackBarClose} severity={this.alertSeverity}>\r\n                    {this.alertContent}\r\n                  </Alert>\r\n                </Snackbar>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </StyledComponent>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert id=\"alert\" elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Home from '../components/pages/Home/Home';\r\nimport Orereo from '../components/pages/Orereo/Orereo';\r\nimport NotFound from '../components/pages/NotFound/NotFound';\r\nimport VisualAlgo from '../components/pages/VisualAlgo/VisualAlgo';\r\n// import App from '../components/topics/app/App/App';\r\nimport Navigation from '../components/topics/NavigationBar/NavigationBar';\r\n\r\nconst MainRoute = () => (\r\n  <div>\r\n    <Navigation></Navigation>\r\n\r\n    {/* A <Switch> looks through its children <Route>s and\r\n        renders the first one that matches the current URL. */}\r\n    <Switch>\r\n      <Route path=\"/playground\">\r\n        <Home />\r\n      </Route>\r\n      <Route path=\"/orereo\">\r\n        <Orereo />\r\n      </Route>\r\n      <Route path=\"/notfound\">\r\n        <NotFound />\r\n      </Route>\r\n      <Route path=\"/visual-algo\">\r\n        <VisualAlgo />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Redirect to=\"/playground\" />\r\n      </Route>\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default MainRoute;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainRoute from '../src/route/MainRoute';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from '../src/serviceWorker';\n\nReactDOM.render(\n    // TODO: React.StrictMode\n    // <React.StrictMode>\n    //     <Router>\n    //         <MainRoute />\n    //     </Router>\n    // </React.StrictMode>,\n    <Router>\n        <MainRoute />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/contemplative-reptile.34dfeed2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/orereo.373d9286.gif\";","module.exports = __webpack_public_path__ + \"static/media/game_of_life.1a994beb.png\";","module.exports = __webpack_public_path__ + \"static/media/o.ed2be46e.png\";","module.exports = __webpack_public_path__ + \"static/media/re.7d5b0651.png\";"],"sourceRoot":""}